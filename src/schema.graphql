scalar DateTime
scalar URL

type Query {
  feed(first: Int, skip: Int): [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  comment(id: ID!): Comment
  reply(id: ID!): Reply
  me: User
  link(url: URL): Link
}

type Mutation {
  ageNotification(id: String!): Notification!
  completeUserOnboarding: User!
  createComment(
    content: String!
    id: ID!
    title: String
    publishedAt: DateTime
  ): Comment!
  createNotification(
    postId: String!
    replyId: String
    userId: String!
  ): Notification!
  createNotifications(postId: String!, commentId: String): [Notification]!
  createPost(
    title: String
    content: String!
    imagePath: URL
    publishedAt: DateTime
  ): Post!
  createReply(
    content: String!
    id: ID!
    imagePath: URL
    publishedAt: DateTime
  ): Reply!
  deleteComment(id: ID!): Comment!
  deletePost(id: ID!): Post!
  deleteReply(id: ID!): Reply!
  linkUserProfilePicture(avatarPath: URL!): User!
  login(email: String!, password: String!): AuthPayload!
  publish(id: ID!): Post!
  signup(
    email: String!
    password: String!
    name: String!
    avatarPath: URL
  ): AuthPayload!
  updateComment(content: String, id: ID!, title: String): Comment!
  updatePassword(password: String!): User!
  updateReply(content: String, id: ID!, imagePath: URL): Reply!
}

type Subscription {
  feedSubscription: Post
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  avatarPath: URL
  posts: [Post!]!
  onboarded: Boolean!
  unreadNotifications: Int!
  notifications: [Notification]!
}

type Post {
  id: ID!
  author: User!
  createdAt: DateTime!
  title: String!
  content: String!
  comments: [Comment!]!
  published: Boolean!
  publishedAt: DateTime!
  imagePath: URL
}

type Comment {
  id: ID!
  author: User!
  createdAt: DateTime!
  publishedAt: DateTime!
  content: String!
  edited: Boolean
  isAuthorCurrentUser: Boolean
  post: Post!
  replies: [Reply!]!
  totalReplies: Int
  title: String
}

type Reply {
  id: ID!
  author: User!
  publishedAt: DateTime!
  content: String!
  comment: Comment!
  edited: Boolean
  imagePath: URL
  isAuthorCurrentUser: Boolean
  link: URL
}

type NotificationContent {
  post: Post!
  reply: Reply
  type: String!
}

type Notification {
  id: ID!
  author: User!
  createdAt: DateTime!
  content: NotificationContent!
  newNotification: Boolean!
}

type Link {
  id: ID!
  author: String
  date: DateTime
  description: String
  image: URL
  publisher: String
  title: String!
  url: URL!
}
