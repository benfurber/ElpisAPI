type Post {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  published: Boolean! @default(value: false)
  title: String
  content: String!
  imagePath: String
  author: User! @relation(name: "PostsForUser", onDelete: SET_NULL)
  comments: [Comment]! @relations(name: "CommentsForPost", onDelete: CASCADE)
  notifications: [Notification!]! @relation(name: "NotificationsForPost", onDelete: CASCADE)
}

type User {
  id: ID! @id
  email: String! @unique
  password: String!
  name: String!
  avatarPath: String
  posts: [Post!]! @relation(name: "PostsForUser", onDelete: CASCADE)
  onboarded: Boolean! @default(value: false)
  notifications: [Notification]! @relation(name: "NotificationsForUser", onDelete: CASCADE)
}

type Comment {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  author: User!
  content: String!
  post: Post! @relations(name: "CommentsForPost", onDelete: SET_NULL)
  replies: [Reply]! @relations(name: "RepliesForComment", onDelete: CASCADE)
  title: String
}

type Reply {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  author: User!
  content: String!
  comment: Comment! @relations(name: "RepliesForComment", onDelete: SET_NULL)
  link: String
  notifications: [Notification!]! @relations(name: "NotificationsForReply", onDelete: CASCADE)
}

type Notification {
  id: ID! @id
  user: User! @relation(name: "NotificationsForUser", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  post: Post! @relation(name: "NotificationsForPost", onDelete: SET_NULL)
  reply: Reply @relations(name: "NotificationsForReply", onDelete: SET_NULL)
  newNotification: Boolean! @default(value: true)
  type: String!
}
